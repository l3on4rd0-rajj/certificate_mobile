#!/bin/bash

# Script para testar honeypots simulando atividades maliciosas
# Objetivo: Verificar se os logs estão sendo gerados e coletados pelo Splunk

# Configurações
LOG_FILE="/tmp/honeypot_test_$(date +%Y%m%d_%H%M%S).log"
HONEYPOTS=("192.168.1.100" "192.168.1.101" "192.168.1.102")  # Substitua pelos IPs dos seus honeypots
SSH_USER="root"
MYSQL_USER="admin"
RDP_USER="Administrator"
WORDLIST="/usr/share/wordlists/rockyou.txt"  # Ajuste para o caminho da sua wordlist

# Função para registrar atividades
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

# Verificar dependências
check_dependencies() {
    command -v nmap >/dev/null 2>&1 || { echo >&2 "nmap não instalado. Instale com: sudo apt install nmap"; exit 1; }
    command -v hydra >/dev/null 2>&1 || { echo >&2 "hydra não instalado. Instale com: sudo apt install hydra"; exit 1; }
    command -v nc >/dev/null 2>&1 || { echo >&2 "netcat não instalado. Instale com: sudo apt install netcat"; exit 1; }
}

# Teste de conexão SSH
test_ssh() {
    local host=$1
    log "Iniciando teste SSH em $host"
    
    # Tentativa de conexão simples
    ssh -o BatchMode=yes -o ConnectTimeout=5 -o StrictHostKeyChecking=no "$SSH_USER@$host" exit 2>&1 | tee -a "$LOG_FILE"
    
    # Simulação de brute force (versão simplificada)
    log "Simulando brute force SSH em $host (3 tentativas)"
    for pass in "password" "123456" "admin"; do
        sshpass -p "$pass" ssh -o StrictHostKeyChecking=no "$SSH_USER@$host" exit 2>&1 | tee -a "$LOG_FILE"
    done
    
    log "Teste SSH concluído para $host"
}

# Teste de conexão MySQL
test_mysql() {
    local host=$1
    log "Iniciando teste MySQL em $host"
    
    # Tentativa de conexão simples
    mysql -h "$host" -u "$MYSQL_USER" -p"wrongpassword" -e "exit" 2>&1 | tee -a "$LOG_FILE"
    
    # Tentativa de comandos SQL
    log "Testando injeção SQL básica em $host"
    for cmd in "SELECT version();" "SHOW databases;" "SELECT * FROM information_schema.tables;"; do
        mysql -h "$host" -u "$MYSQL_USER" -p"wrongpassword" -e "$cmd" 2>&1 | tee -a "$LOG_FILE"
    done
    
    log "Teste MySQL concluído para $host"
}

# Teste de conexão RDP
test_rdp() {
    local host=$1
    log "Iniciando teste RDP em $host"
    
    # Tentativa de conexão básica (requer xfreerdp ou rdesktop)
    if command -v xfreerdp >/dev/null 2>&1; then
        xfreerdp /v:"$host" /u:"$RDP_USER" /p:"wrongpassword" +auth-only /sec:nla 2>&1 | tee -a "$LOG_FILE"
    elif command -v rdesktop >/dev/null 2>&1; then
        rdesktop "$host" -u "$RDP_USER" -p "wrongpassword" 2>&1 | tee -a "$LOG_FILE"
    else
        log "Ferramenta RDP não encontrada (xfreerdp ou rdesktop)"
    fi
    
    log "Teste RDP concluído para $host"
}

# Teste de port scanning com Nmap
test_nmap() {
    local host=$1
    log "Iniciando scan Nmap em $host"
    
    # Scan rápido de portas comuns
    nmap -T4 -F "$host" 2>&1 | tee -a "$LOG_FILE"
    
    # Detecção de serviços
    nmap -sV -T4 "$host" -p 21,22,80,443,3389 2>&1 | tee -a "$LOG_FILE"
    
    log "Teste Nmap concluído para $host"
}

# Teste de conexões genéricas
test_generic() {
    local host=$1
    log "Iniciando testes genéricos em $host"
    
    # Tentativa de conexão em várias portas com netcat
    for port in 21 22 23 80 443 8080 3389; do
        log "Testando conexão TCP na porta $port"
        nc -zv -w 2 "$host" "$port" 2>&1 | tee -a "$LOG_FILE"
    done
    
    # Tentativa de HTTP básico
    log "Testando requisição HTTP básica"
    curl -s -I "http://$host" 2>&1 | tee -a "$LOG_FILE"
    curl -s -I "https://$host" 2>&1 | tee -a "$LOG_FILE"
    
    log "Testes genéricos concluídos para $host"
}

# Execução principal
main() {
    check_dependencies
    log "Iniciando testes de honeypot"
    
    for honeypot in "${HONEYPOTS[@]}"; do
        log "Testando honeypot: $honeypot"
        test_ssh "$honeypot"
        test_mysql "$honeypot"
        test_rdp "$honeypot"
        test_nmap "$honeypot"
        test_generic "$honeypot"
        log "Testes concluídos para $honeypot"
        sleep 5
    done
    
    log "Todos os testes foram concluídos"
    log "Verifique os logs no Splunk para confirmar a coleta"
    log "Log local salvo em: $LOG_FILE"
}

main
