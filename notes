import pandas as pd
import os
from tkinter import Tk, filedialog

def escolher_local_salvamento():
    root = Tk()
    root.withdraw()
    caminho = filedialog.asksaveasfilename(
        defaultextension=".csv",
        filetypes=[("Arquivos CSV", "*.csv"), ("Todos os arquivos", "*.*")],
        title="Salvar como"
    )
    return caminho

# Caminhos dos arquivos
arquivo1 = r'C:\Users\Leonardo Vargas\PycharmProjects\comparador\pythonProject1\arquivo1.csv'
arquivo2 = r'C:\Users\Leonardo Vargas\PycharmProjects\comparador\pythonProject1\arquivo2.csv'

if not os.path.exists(arquivo1):
    print(f"Erro: O arquivo {arquivo1} não foi encontrado.")
elif not os.path.exists(arquivo2):
    print(f"Erro: O arquivo {arquivo2} não foi encontrado.")
else:
    try:
        # Carregar os arquivos
        df1 = pd.read_csv(arquivo1, delimiter=';')
        df2 = pd.read_csv(arquivo2, delimiter=';')

        # Padronizar nomes das colunas
        df1.columns = df1.columns.str.strip().str.lower()
        df2.columns = df2.columns.str.strip().str.lower()

        # Verificar colunas necessárias
        if 'ms' not in df1.columns:
            raise ValueError(f"Arquivo {arquivo1} deve ter coluna 'ms'")
        if 'project name' not in df2.columns:
            raise ValueError(f"Arquivo {arquivo2} deve ter coluna 'project name'")

        # Adicionar coluna de status
        df1['status'] = 'nok'
        df1.loc[df1['ms'].isin(df2['project name']), 'status'] = 'ok'

        # Calcular estatísticas por projeto (assumindo coluna 'product')
        if 'product' in df1.columns:
            # Criar DataFrame com estatísticas
            stats = df1.groupby('product').agg(
                total_ms=('ms', 'count'),
                qtd_ok=('status', lambda x: (x == 'ok').sum()),
                qtd_nok=('status', lambda x: (x == 'nok').sum())
            ).reset_index()
            
            # Calcular porcentagens
            stats['%_ok'] = (stats['qtd_ok'] / stats['total_ms'] * 100).round(2)
            stats['%_nok'] = (stats['qtd_nok'] / stats['total_ms'] * 100).round(2)
            
            # Adicionar colunas ao DataFrame original
            for col in ['total_ms', 'qtd_ok', 'qtd_nok', '%_ok', '%_nok']:
                df1[col] = df1['product'].map(stats.set_index('product')[col])
        else:
            print("Aviso: Coluna 'product' não encontrada. Estatísticas não calculadas.")

        # Salvar o arquivo
        caminho_saida = escolher_local_salvamento()
        if caminho_saida:
            df1.to_csv(caminho_saida, index=False, sep=';')
            print(f"Arquivo salvo em: {caminho_saida}")
            print("\nVisualização das novas colunas:")
            print(df1[['product', 'ms', 'status', 'total_ms', 'qtd_ok', 'qtd_nok', '%_ok', '%_nok']].head())
        else:
            print("Operação cancelada.")
    except Exception as e:
        print(f"Erro: {e}")
