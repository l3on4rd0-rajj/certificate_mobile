import pandas as pd
import os
from tkinter import Tk, filedialog

# Função para selecionar o local de salvamento do arquivo
def escolher_local_salvamento():
    root = Tk()
    root.withdraw()  # Esconde a janela principal do tkinter
    caminho = filedialog.asksaveasfilename(
        defaultextension=".csv",
        filetypes=[("Arquivos CSV", "*.csv"), ("Todos os arquivos", "*.*")],
        title="Salvar como"
    )
    return caminho

# Caminhos dos arquivos (ajuste conforme necessário)
caminho_base = os.getcwd()  # Usa o diretório atual do projeto
arquivo1 = os.path.join(caminho_base, 'planilha1.csv')  # Substitua pelo nome real do arquivo
arquivo2 = os.path.join(caminho_base, 'planilha2.csv')  # Substitua pelo nome real do arquivo

# Verificar se os arquivos existem
if not os.path.exists(arquivo1):
    print(f"Erro: O arquivo {arquivo1} não foi encontrado.")
elif not os.path.exists(arquivo2):
    print(f"Erro: O arquivo {arquivo2} não foi encontrado.")
else:
    try:
        # Carregar os arquivos CSV
        df1 = pd.read_csv(arquivo1)  # CSV 1: Product, MS
        df2 = pd.read_csv(arquivo2)  # CSV 2: Project Name, Latest Version ID

        # Inspecionar os dados
        print("Primeiras linhas de planilha1.csv:")
        print(df1.head())
        print("\nPrimeiras linhas de planilha2.csv:")
        print(df2.head())

        # Verificar se as colunas estão corretas
        if 'MS' not in df1.columns:
            raise ValueError(f"O arquivo {arquivo1} deve ter uma coluna chamada 'MS'.")
        if 'Project Name' not in df2.columns:
            raise ValueError(f"O arquivo {arquivo2} deve ter uma coluna chamada 'Project Name'.")

        # Criar uma nova coluna 'Status' no df1 com valor padrão 'nok'
        df1['Status'] = 'nok'

        # Verificar se os valores de 'MS' em df1 estão em 'Project Name' em df2
        df1.loc[df1['MS'].isin(df2['Project Name']), 'Status'] = 'ok'

        # Perguntar onde salvar o arquivo de saída
        caminho_saida = escolher_local_salvamento()

        if caminho_saida:  # Se o usuário escolher um local
            # Salvar o resultado em um novo arquivo CSV
            df1.to_csv(caminho_saida, index=False)
            print(f"Arquivo salvo com sucesso em: {caminho_saida}")
        else:
            print("Operação cancelada pelo usuário.")
    except Exception as e:
        print(f"Erro ao processar os arquivos: {e}")
